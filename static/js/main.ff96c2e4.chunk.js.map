{"version":3,"sources":["Main/components/Details/hooks/useStyles/index.ts","Main/components/Details/index.tsx","hooks/useGetAge/index.ts","Main/hooks/useStyles/index.ts","helpers/index.ts","classes/Tree/index.ts","classes/Branch/index.ts","Main/index.tsx","index.tsx"],"names":["createUseStyles","container","position","top","left","borderRadius","maxWidth","opacity","transition","containerVisible","name","fontSize","fontWeight","color","profession","fontStyle","letterSpacing","description","marginTop","Details","visible","classes","useStyles","age","getAge","useCallback","moment","diff","useState","setAge","useEffect","timeout","setTimeout","clearTimeout","useGetAge","anOrA","useMemo","toString","startsWith","className","classnames","canvas","width","height","right","bottom","degreesToRadians","degrees","Math","PI","Tree","from","length","maxDepthThreshold","angle","depth","this","fromX","x","fromY","y","cos","sin","context","lineWidth","max","strokeStyle","beginPath","moveTo","lineTo","to","stroke","render","nextLength","oppositeAngle","nextAngle","nextDepth","Branch","draw","Main","canvasRef","createRef","treeAge","setTreeAge","current","window","innerWidth","innerHeight","getContext","background","createLinearGradient","addColorStop","fillStyle","fillRect","addEventListener","removeEventListener","n","useLayoutEffect","ref","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff96c2e4.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles({\r\n    container: {\r\n        position: 'absolute',\r\n        top: 50,\r\n        left: 50,\r\n        borderRadius: 8,\r\n        maxWidth: 400,\r\n        opacity: 0,\r\n        transition: 'opacity 0.4s ease-in-out',\r\n    },\r\n\r\n    containerVisible: {\r\n        opacity: 1,\r\n    },\r\n\r\n    name: {\r\n        fontSize: 36,\r\n        fontWeight: 'bold',\r\n        opacity: 0.9,\r\n        color: '#ffffff',\r\n    },\r\n\r\n    profession: {\r\n        fontSize: 14,\r\n        opacity: 0.8,\r\n        color: '#ffffff',\r\n        fontStyle: 'italic',\r\n        letterSpacing: '3px',\r\n    },\r\n\r\n    description: {\r\n        fontSize: 14,\r\n        opacity: 0.8,\r\n        color: '#ffffff',\r\n        marginTop: 10,\r\n        letterSpacing: '0.5px',\r\n    },\r\n});\r\n","import React, { useMemo } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport useGetAge from '../../../hooks/useGetAge';\r\nimport useStyles from './hooks/useStyles';\r\nimport { IProps } from './interfaces';\r\n\r\nconst Details: React.FC<IProps> = ({ visible }) => {\r\n    const classes = useStyles();\r\n    const age = useGetAge();\r\n\r\n    const anOrA = useMemo(\r\n        () => (age.toString().startsWith('8') || age === 18 ? 'an' : 'a'),\r\n        [age],\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={classnames(\r\n                classes.container,\r\n                visible && classes.containerVisible,\r\n            )}\r\n        >\r\n            <p className={classes.name}>Salem Cresswell</p>\r\n\r\n            <p className={classes.profession}>SOFTWARE ENGINEER</p>\r\n\r\n            <p className={classes.description}>\r\n                Hey there! I&apos;m {anOrA} {age} year old full-stack software\r\n                engineer. I mainly use the PHP framework Laravel &amp; the\r\n                JavaScript framework React, paired with TypeScript.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Details;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function useGetAge(): number {\r\n    const getAge = useCallback(\r\n        () => moment().diff(moment('2000-03-23'), 'years'),\r\n        [],\r\n    );\r\n\r\n    const [age, setAge] = useState(getAge());\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setAge(getAge());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [getAge]);\r\n\r\n    return age;\r\n}\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles({\r\n    canvas: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n});\r\n","/**\r\n * Convert an angle in degrees to radians.\r\n *\r\n * @param {number} degrees The angle in degrees.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport const degreesToRadians = (degrees: number): number =>\r\n    (degrees * Math.PI) / 180;\r\n","import { IPosition } from '../interfaces';\r\nimport Branch from '../Branch';\r\n\r\nconst DEFAULT_MAX_DEPTH_THRESHOLD = 10;\r\n\r\nclass Tree extends Branch {\r\n    /**\r\n     * Create a new tree.\r\n     *\r\n     * @param {IPosition} from The starting position.\r\n     * @param {number} length The length of the trunk.\r\n     * @param {?number} maxDepthThreshold The maximum depth threshold.\r\n     */\r\n    public constructor(\r\n        from: IPosition,\r\n        length: number,\r\n        maxDepthThreshold: number = DEFAULT_MAX_DEPTH_THRESHOLD,\r\n    ) {\r\n        super(from, length, 90, 0, maxDepthThreshold);\r\n    }\r\n}\r\n\r\nexport default Tree;\r\n","import { degreesToRadians } from '../../helpers';\r\nimport { IPosition } from '../interfaces';\r\n\r\nconst BRANCH_LENGTH_MULTIPLIER = 0.78;\r\nconst BRANCH_WIDTH_MODIFIER = 2;\r\nconst BRANCH_ANGLE_OFFSET = 22;\r\n\r\nclass Branch {\r\n    /**\r\n     * Create a new brach.\r\n     *\r\n     * @param {IPosition} from The starting position.\r\n     * @param {number} length The length of the branch.\r\n     * @param {number} angle The angle of the branch.\r\n     * @param {number} depth The depth of the branch.\r\n     * @param {number} maxDepthThreshold The maximum depth threshold for the tree this branch belongs to.\r\n     */\r\n    public constructor(\r\n        public readonly from: IPosition,\r\n        public readonly length: number,\r\n        public readonly angle: number,\r\n        public readonly depth: number,\r\n        public readonly maxDepthThreshold: number,\r\n    ) {}\r\n\r\n    /**\r\n     * Get the end position of this branch.\r\n     *\r\n     * @return {IPosition}\r\n     */\r\n    public get to(): IPosition {\r\n        const {\r\n            from: { x: fromX, y: fromY },\r\n            angle,\r\n            length,\r\n        } = this;\r\n\r\n        return {\r\n            x: fromX + Math.cos(degreesToRadians(angle)) * (length * -1),\r\n            y: fromY + Math.sin(degreesToRadians(angle)) * (length * -1),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Render this branch to the canvas via `context`.\r\n     *\r\n     * @param {CanvasRenderingContext2D} context The canvas context.\r\n     *\r\n     * @return {void}\r\n     */\r\n    private render(context: CanvasRenderingContext2D): void {\r\n        context.lineWidth = Math.max(\r\n            this.maxDepthThreshold - BRANCH_WIDTH_MODIFIER - this.depth,\r\n            1,\r\n        );\r\n\r\n        if (this.depth >= this.maxDepthThreshold - 2) {\r\n            context.strokeStyle = '#4D7C0F';\r\n        } else {\r\n            context.strokeStyle = '#5C3317';\r\n        }\r\n\r\n        context.beginPath();\r\n        context.moveTo(this.from.x, this.from.y);\r\n        context.lineTo(this.to.x, this.to.y);\r\n        context.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw this branch and its child branches.\r\n     *\r\n     * @param {CanvasRenderingContext2D} context The canvas context.\r\n     *\r\n     * @return {void}\r\n     */\r\n    public draw(context: CanvasRenderingContext2D): void {\r\n        this.render(context);\r\n\r\n        if (this.depth >= this.maxDepthThreshold) return;\r\n\r\n        const nextLength = this.length * BRANCH_LENGTH_MULTIPLIER;\r\n        const oppositeAngle = this.angle + BRANCH_ANGLE_OFFSET;\r\n        const nextAngle = this.angle - BRANCH_ANGLE_OFFSET;\r\n        const nextDepth = this.depth + 1;\r\n\r\n        new Branch(\r\n            this.to,\r\n            nextLength,\r\n            nextAngle,\r\n            nextDepth,\r\n            this.maxDepthThreshold,\r\n        ).draw(context);\r\n\r\n        new Branch(\r\n            this.to,\r\n            nextLength,\r\n            oppositeAngle,\r\n            nextDepth,\r\n            this.maxDepthThreshold,\r\n        ).draw(context);\r\n    }\r\n}\r\n\r\nexport default Branch;\r\n","import React, {\r\n    useState,\r\n    createRef,\r\n    useEffect,\r\n    useCallback,\r\n    useLayoutEffect,\r\n} from 'react';\r\n\r\nimport Details from './components/Details';\r\nimport useStyles from './hooks/useStyles';\r\nimport Tree from '../classes/Tree';\r\n\r\nconst TREE_MAX_AGE = 10;\r\n\r\nconst Main: React.FC = () => {\r\n    const canvasRef = createRef<HTMLCanvasElement>();\r\n    const [treeAge, setTreeAge] = useState(1);\r\n    const classes = useStyles();\r\n\r\n    const render = useCallback(() => {\r\n        const { current: canvas } = canvasRef;\r\n\r\n        if (!canvas) return;\r\n\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        const context = canvas.getContext('2d');\r\n\r\n        if (!context) return;\r\n\r\n        const background = context.createLinearGradient(0, 0, 0, canvas.height);\r\n\r\n        background.addColorStop(0, 'rgb(33, 102, 155)');\r\n        background.addColorStop(0.3, 'rgb(87, 193, 235)');\r\n        background.addColorStop(0.7, 'rgb(255, 255, 255)');\r\n\r\n        context.fillStyle = background;\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        new Tree(\r\n            { x: canvas.width / 2, y: canvas.height },\r\n            treeAge * 8,\r\n            treeAge,\r\n        ).draw(context);\r\n\r\n        context.fillStyle = context;\r\n    }, [canvasRef, treeAge]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', render);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', render);\r\n        };\r\n    }, [render]);\r\n\r\n    useEffect(() => {\r\n        if (treeAge >= TREE_MAX_AGE) return;\r\n\r\n        const timeout = setTimeout(() => {\r\n            setTreeAge((n) => n + 1);\r\n        }, 75);\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [treeAge]);\r\n\r\n    useLayoutEffect(render, [render]);\r\n\r\n    return (\r\n        <>\r\n            <canvas className={classes.canvas} ref={canvasRef} />\r\n\r\n            <Details visible={treeAge >= TREE_MAX_AGE} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\n\r\nimport Main from './Main';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Main />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}